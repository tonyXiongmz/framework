1、数据的获取，Request,facde/input可以
  Request->input()//全部
  Request->input('name')//单个值
  Input->all()//全部
  Input->get()//get方式
  Input->post()//表单提交
  Input->only([])//指定值
  Input->excep([])//例外值
 
 2、常量的使用
  DB,APP,INPUT，常用的类为了减少调用路径的显示，在config/app.php alisaes中定义一个公共常量
  
  3、配置文件
  .env中存放数据库、redis的配置文件，如果用php artisan:serve启动的项目，修改完以后需要清除缓存
  php artisan config:clear   php artisan cache:clear
  
  4、数据库的操作
    1）增加操作insert,insertGetId,insert可以添加一条和多条记录，返回布尔值；insertGetId只能添加一条数据，返回自增的id
    2）更新操作update\increment\decrement,update返回受影响条数；increment自增decrement自减，针对数字类型的字段，默认操作1，可自定义
    3）查询操作get(),first(),find()//返回的是对象,value('某个字段的值'),pluck('某一列的值'),chunk('分块处理'),count(总数),max(最大值),min(最小值),avg(平均数),sum(求和)
    相关参数where(条件)->orWhere(或查询)->distinct(去重)->orderBy(排序)->groupBy('分组')->limit(数量)->offset(起始位置)->having(二次排序)->select(指定字段值)->toArray(转数组)
    4)删除delete返回受影响条数,truncate删库跑路
    5）DB::statement()//增删改原生语句
    6）DB::select()//查询原生语句，返回的是数组
    7）DB::table(完整表名)
    8)DB::name(去前缀表名)
5、视图操作 return views('文件名',[]); return views('文件名',compact(根据变量名自动生成数组))
6、csrf攻击，视图中加入csrf_token的隐藏域根据表单一同提交，csrf_field会生成整个隐藏域，异步提交时只能使用csrf_token;例外路由在\app\Http\Middleware\verifyCsrfToken中添加例外
7、Model的使用；
  1）(必选)定义一个$table属性，不需要加前缀的表名，如果不加会默认去查找带复数的表名,protected；
  2）（可选）定义一个$primarykey的属性，如果主键不为ID的情况下需要定义,protected；
  3）（可选）定义$timestamp属性为false,默认为true,如果表中没有create_at和update_at字段的话一定要设置为false,public.
  4)（可选）定义$fillable属性，表示允许插入到数据库的字段信息,使用create存储时需要定义，protected
  5）可以静态直接调用，也可以先实例化调用。
